[{"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js":"1","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js":"2","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js":"3","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js":"4","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js":"5","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js":"6","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js":"7"},{"size":349,"mtime":1681604130757,"results":"8","hashOfConfig":"9"},{"size":1313,"mtime":1681617326290,"results":"10","hashOfConfig":"9"},{"size":4950,"mtime":1681424712103,"results":"11","hashOfConfig":"9"},{"size":309,"mtime":1681594745354,"results":"12","hashOfConfig":"9"},{"size":6631,"mtime":1681515431142,"results":"13","hashOfConfig":"9"},{"size":5850,"mtime":1681509086473,"results":"14","hashOfConfig":"9"},{"size":861,"mtime":1681604470991,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hwmzer",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js",["41"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js",["42"],[],"/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport { NavLink, Link } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nfunction Header({ loggedIn, user, onLogout }) {\n  function handleLogout() {\n    fetch(`/logout`, {\n      method: 'DELETE',\n    }).then(() => onLogout());\n  }\n\n  return (\n    <div>\n      <div className='bg-primary navbar text-primary-content'>\n        <div className='navbar-start'>\n          <div className='dropdown'>\n            <label tabIndex={0} className='btn btn-ghost sm:hidden'>\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                className='w-5 h-5'\n                fill='none'\n                viewBox='0 0 24 24'\n                stroke='currentColor'>\n                <path\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                  strokeWidth='2'\n                  d='M4 6h16M4 12h8m-8 6h16'\n                />\n              </svg>\n            </label>\n            <ul\n              tabIndex={0}\n              className='w-56 p-2 mt-3 shadow menu menu-compact dropdown-content bg-base-100 rounded-box'>\n              <li>\n                <NavLink to='/' className='font-bold uppercase'>\n                  the best\n                </NavLink>\n              </li>\n              {/* <li>\n                <NavLink to='/concerts' className='font-bold uppercase'>\n                  concerts\n                </NavLink>\n              </li> */}\n\n              <div>\n                {/* {currentUser === (null || '') && (\n                  <li>\n                    <NavLink className='font-bold uppercase' to='/login'>\n                      login\n                    </NavLink>\n                  </li>\n                )} */}\n                {/* {currentUser !== (null || '') && (\n                  <div>\n                    <li>\n                      <NavLink className='font-bold uppercase' to='/'>\n                        <button\n                          className='font-bold uppercase'\n                          onClick={handleLogout}>\n                          logout {currentUser.username}\n                        </button>\n                      </NavLink>\n                    </li>\n                  </div>\n                )} */}\n              </div>\n            </ul>\n          </div>\n          <div className='navbar-start'>\n            <div className='flex-auto p-4'>\n              <Link to='/'>\n                <h3 className='text-5xl normal-case border-none btn btn-secondary btn-outline'>\n                  COCKTAILS?\n                </h3>\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className='navbar-center sm:flex'>\n          <div className='flex-auto'>\n            <ul className='p-0 menu menu-horizontal'>\n              <li>\n                <NavLink\n                  to='/best'\n                  className='font-bold uppercase border-none btn btn-outline'>\n                  <h3 className='font-bold uppercase'>where's the best?</h3>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to='/bars'\n                  className='font-bold uppercase border-none btn btn-outline '>\n                  <h3 className='font-bold uppercase'>all bars</h3>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to='/cocktails'\n                  className='font-bold uppercase border-none btn btn-outline '>\n                  <h3 className='font-bold uppercase'>all cocktails</h3>\n                </NavLink>\n              </li>\n              {/* {loggedIn === true && (\n                <li>\n                  <NavLink\n                    to='/thisUser'\n                    state={{ thisUser: currentUser }}\n                    className='font-bold uppercase border-none btn btn-outline'>\n                    Your Activity\n                  </NavLink>\n                </li>\n              )} */}\n            </ul>\n          </div>\n        </div>\n        <div className='hidden navbar-end sm:flex'>\n          <div className='flex-initial'>\n            <ul className='float-right p-0 menu menu-horizontal'>\n              {loggedIn === false && (\n                <li>\n                  <NavLink\n                    className='font-bold uppercase border-none btn btn-outline'\n                    to='/login'>\n                    LOGIN\n                  </NavLink>\n                </li>\n              )}\n              {loggedIn === true && (\n                <div>\n                  <li>\n                    <button\n                      className='font-bold uppercase border-none btn btn-outline'\n                      onClick={handleLogout}>\n                      logout {user.username}\n                    </button>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n",[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js",["43","44"],[],"import { useEffect, useState } from 'react';\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\n\nfunction Login({ onLogin, setLoggedIn }) {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((info) => {\n          console.log('response info in /login submit: ', info);\n          onLogin(info);\n          setError('');\n          setErrorsExist(false);\n          setSuccess('success!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e: ', e);\n          setErrorsExist(true);\n          setError(e.error);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n\n                <span>{error}</span>\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            LOGIN\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type your password and you can log in'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  <div>\n                    <div class='form-control mt-6'>\n                      <button class='btn btn-primary'>Login</button>\n                    </div>\n                  </div>\n                ) : null\n              ) : null\n            ) : (\n              <div className='shadow-lg alert alert-success'>\n                <div>\n                  <svg\n                    xmlns='http://www.w3.org/2000/svg'\n                    className='flex-shrink-0 w-6 h-6 stroke-current'\n                    fill='none'\n                    viewBox='0 0 24 24'>\n                    <path\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='2'\n                      d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                    />\n                  </svg>\n                  <span>Welcome! You're logged in!</span>\n                </div>\n              </div>\n            )}\n            <div>\n              <label>\n                <Link\n                  to='/signup'\n                  type='submit'\n                  class='btn btn-ghost w-full font-bold form-control text-secondary uppercase'>\n                  First time here? Sign up!\n                </Link>\n              </label>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n// {submitted === false ? (\n//   <div>\n//     <div class='form-control mt-6'>\n//       <button class='btn btn-primary'>Login</button>\n//     </div>\n//     <label>\n//       <Link\n//         to='/signup'\n//         type='submit'\n//         class='btn btn-ghost w-full font-bold form-control text-secondary-content uppercase'>\n//         First time here? Sign up!\n//       </Link>\n//     </label>\n//   </div>\n// ) : (\n//   <div className='shadow-lg alert alert-success'>\n//     <div>\n//       <svg\n//         xmlns='http://www.w3.org/2000/svg'\n//         className='flex-shrink-0 w-6 h-6 stroke-current'\n//         fill='none'\n//         viewBox='0 0 24 24'>\n//         <path\n//           strokeLinecap='round'\n//           strokeLinejoin='round'\n//           strokeWidth='2'\n//           d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n//         />\n//       </svg>\n//       <span>Welcome! You're logged in!</span>\n//     </div>\n//   </div>\n// )}\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js",["45","46"],[],"import { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction SignUp({ onLogin }) {\n  //todo\n  //^ stylize this page way better\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const [errorArray, setErrorArray] = useState([]);\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((newUser) => {\n          console.log('newUser: ', newUser);\n          onLogin(newUser);\n          setErrorArray([]);\n          setErrorsExist(false);\n          setSuccess('Your post has been created!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e. errors within bad response: ', e.errors);\n          // set the errorString to e.errors.join(*join with a comma*)\n          setErrorsExist(true);\n          setErrorArray(e.errors);\n          console.log('errorArray state within bad response: ', errorArray);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n                {errorArray.map((eachError) => (\n                  <span>{eachError}</span>\n                ))}\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            SIGNUP\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your desired username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type in a new password'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password confirmation</span>\n              </label>\n              <input\n                type='passwordConfirmation'\n                id='passwordConfirmation'\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                placeholder='then, type it in again to be sure'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  passwordConfirmation !== '' ? (\n                    <div>\n                      <div class='form-control mt-6'>\n                        <button type='submit' class='btn btn-primary'>\n                          Sign Up!\n                        </button>\n                      </div>\n                    </div>\n                  ) : null\n                ) : null\n              ) : null\n            ) : null}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js",["47","48","49","50"],["51"],{"ruleId":"52","severity":1,"message":"53","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":19},{"ruleId":"52","severity":1,"message":"57","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":1,"column":20,"nodeType":"54","messageId":"55","endLine":1,"endColumn":29},{"ruleId":"52","severity":1,"message":"58","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"52","severity":1,"message":"59","line":10,"column":15,"nodeType":"54","messageId":"55","endLine":10,"endColumn":21},{"ruleId":"52","severity":1,"message":"60","line":11,"column":15,"nodeType":"54","messageId":"55","endLine":11,"endColumn":21},{"ruleId":"52","severity":1,"message":"61","line":12,"column":16,"nodeType":"54","messageId":"55","endLine":12,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":23,"column":6,"nodeType":"64","endLine":23,"endColumn":8,"suggestions":"65"},{"ruleId":"66","severity":2,"message":"67","line":1,"column":1,"nodeType":"68","endLine":1,"endColumn":35,"suppressions":"69"},"no-unused-vars","'MapboxMap' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Link' is defined but never used.","'setLat' is assigned a value but never used.","'setLng' is assigned a value but never used.","'setZoom' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lat', 'lng', and 'zoom'. Either include them or remove the dependency array.","ArrayExpression",["70"],"import/no-webpack-loader-syntax","Unexpected '!' in '!mapbox-gl'. Do not use import syntax to configure webpack loaders.","ImportDeclaration",["71"],{"desc":"72","fix":"73"},{"kind":"74","justification":"75"},"Update the dependencies array to be: [lat, lng, zoom]",{"range":"76","text":"77"},"directive","",[730,732],"[lat, lng, zoom]"]