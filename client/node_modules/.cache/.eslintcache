[{"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js":"1","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js":"2","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js":"3","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js":"4","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js":"5","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js":"6","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js":"7","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/user.jsx":"8","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/UserAddressForm.js":"9","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/BarsDisplay.js":"10","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarPage.js":"11","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/bars.jsx":"12","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/barCocktails.jsx":"13","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Loading.js":"14"},{"size":657,"mtime":1682476127892,"results":"15","hashOfConfig":"16"},{"size":2799,"mtime":1682476127891,"results":"17","hashOfConfig":"16"},{"size":5128,"mtime":1682476127891,"results":"18","hashOfConfig":"16"},{"size":1654,"mtime":1682476127891,"results":"19","hashOfConfig":"16"},{"size":6772,"mtime":1682121850472,"results":"20","hashOfConfig":"16"},{"size":6010,"mtime":1682121686518,"results":"21","hashOfConfig":"16"},{"size":2243,"mtime":1682476127891,"results":"22","hashOfConfig":"16"},{"size":542,"mtime":1682479844704,"results":"23","hashOfConfig":"16"},{"size":5839,"mtime":1682455537876,"results":"24","hashOfConfig":"16"},{"size":2023,"mtime":1682544776194,"results":"25","hashOfConfig":"16"},{"size":126,"mtime":1682476127891,"results":"26","hashOfConfig":"16"},{"size":502,"mtime":1682476480782,"results":"27","hashOfConfig":"16"},{"size":627,"mtime":1682476127892,"results":"28","hashOfConfig":"16"},{"size":552,"mtime":1682476127891,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hwmzer",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js",["76","77","78","79","80","81","82","83","84","85","86"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js",["87","88"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js",["89","90","91","92","93","94","95","96","97"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js",["98","99","100"],[],"import { useState, useEffect, useContext } from 'react';\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\nimport { UserProvider, UserContext } from '../context/user';\n\nfunction Login({ setLoggedIn }) {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((info) => {\n          console.log('response info in /login submit: ', info);\n          setUser(info);\n          setLoggedIn(true);\n          setError('');\n          setErrorsExist(false);\n          setSuccess('success!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e: ', e);\n          setErrorsExist(true);\n          setError(e.error);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n\n                <span>{error}</span>\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            LOGIN\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type your password and you can log in'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  <div>\n                    <div class='form-control mt-6'>\n                      <button class='btn btn-primary'>Login</button>\n                    </div>\n                  </div>\n                ) : null\n              ) : null\n            ) : (\n              <div className='shadow-lg alert alert-success'>\n                <div>\n                  <svg\n                    xmlns='http://www.w3.org/2000/svg'\n                    className='flex-shrink-0 w-6 h-6 stroke-current'\n                    fill='none'\n                    viewBox='0 0 24 24'>\n                    <path\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='2'\n                      d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                    />\n                  </svg>\n                  <span>Welcome! You're logged in!</span>\n                </div>\n              </div>\n            )}\n            <div>\n              <label>\n                <Link\n                  to='/signup'\n                  type='submit'\n                  class='btn btn-ghost w-full font-bold form-control text-secondary uppercase'>\n                  First time here? Sign up!\n                </Link>\n              </label>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n// {submitted === false ? (\n//   <div>\n//     <div class='form-control mt-6'>\n//       <button class='btn btn-primary'>Login</button>\n//     </div>\n//     <label>\n//       <Link\n//         to='/signup'\n//         type='submit'\n//         class='btn btn-ghost w-full font-bold form-control text-secondary-content uppercase'>\n//         First time here? Sign up!\n//       </Link>\n//     </label>\n//   </div>\n// ) : (\n//   <div className='shadow-lg alert alert-success'>\n//     <div>\n//       <svg\n//         xmlns='http://www.w3.org/2000/svg'\n//         className='flex-shrink-0 w-6 h-6 stroke-current'\n//         fill='none'\n//         viewBox='0 0 24 24'>\n//         <path\n//           strokeLinecap='round'\n//           strokeLinejoin='round'\n//           strokeWidth='2'\n//           d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n//         />\n//       </svg>\n//       <span>Welcome! You're logged in!</span>\n//     </div>\n//   </div>\n// )}\n",[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js",["101","102","103","104"],[],"import { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { user, UserProvider, UserContext } from '../context/user';\n\nfunction SignUp({ setLoggedIn }) {\n  //todo\n  //^ stylize this page way better\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const [errorArray, setErrorArray] = useState([]);\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((newUser) => {\n          console.log('newUser: ', newUser);\n          setUser(newUser);\n          setLoggedIn(true);\n          setErrorArray([]);\n          setErrorsExist(false);\n          setSuccess('Your post has been created!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e. errors within bad response: ', e.errors);\n          // set the errorString to e.errors.join(*join with a comma*)\n          setErrorsExist(true);\n          setErrorArray(e.errors);\n          console.log('errorArray state within bad response: ', errorArray);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n                {errorArray.map((eachError) => (\n                  <span>{eachError}</span>\n                ))}\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            SIGNUP\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your desired username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type in a new password'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password confirmation</span>\n              </label>\n              <input\n                type='passwordConfirmation'\n                id='passwordConfirmation'\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                placeholder='then, type it in again to be sure'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  passwordConfirmation !== '' ? (\n                    <div>\n                      <div class='form-control mt-6'>\n                        <button type='submit' class='btn btn-primary'>\n                          Sign Up!\n                        </button>\n                      </div>\n                    </div>\n                  ) : null\n                ) : null\n              ) : null\n            ) : null}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js",["105","106","107","108","109","110"],["111"],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/user.jsx",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/UserAddressForm.js",["112","113","114","115","116","117","118","119"],[],"// code came from this mapbox direct tutorial\n// https://docs.mapbox.com/mapbox-search-js/example/autofill-checkout-react/\n\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { AddressAutofill } from '@mapbox/search-js-react';\nimport { user, UserProvider, UserContext } from '../context/user';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function UserAddressForm() {\n  const navigate = useNavigate();\n  const { user } = useContext(UserContext);\n\n  const [street, setStreet] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [country, setCountry] = useState('');\n  const [postcode, setPostcode] = useState('');\n\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  console.log('street in this component: ', street);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`/users/${user.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        street,\n        city,\n        state,\n        country,\n        postcode,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((info) => {\n          console.log('response of user address form: ', info);\n          setError('');\n          setErrorsExist(false);\n          setSuccess('success!');\n          setSubmitted(true);\n          // set timeOut function to navigate after 1 second\n          // navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e: ', e);\n          setErrorsExist(true);\n          setError(e.error);\n        });\n      }\n    });\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n      <AddressAutofill accessToken='pk.eyJ1IjoibWFqYWxpanUiLCJhIjoiY2xnbXZ5MjR4MDl3cDNzcWFvN3Nsc3F0aSJ9.eDrOKKxTWcKvQfdCuDIiFA'>\n        <div className='w-full max-w-xs form-control'>\n          <label className='label'>\n            <span className='label-text'>Type in a street...</span>\n            <span className='label-text-alt'>Street</span>\n          </label>\n          <input\n            name='street'\n            placeholder='Street'\n            type='text'\n            onChange={(e) => setStreet(e.target.value)}\n            autoComplete='address-line1'\n            className='w-full max-w-xs input input-bordered'\n          />\n        </div>\n      </AddressAutofill>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your state</span>\n          <span className='label-text-alt'>State</span>\n        </label>\n        <input\n          name='state'\n          placeholder='State'\n          type='text'\n          onChange={(e) => setState(e.target.value)}\n          autoComplete='address-level1'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your city</span>\n          <span className='label-text-alt'>City</span>\n        </label>\n        <input\n          name='city'\n          placeholder='City'\n          type='text'\n          onChange={(e) => setCity(e.target.value)}\n          autoComplete='address-level2'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your country</span>\n          <span className='label-text-alt'>Country</span>\n        </label>\n        <input\n          name='country'\n          placeholder='Country'\n          type='text'\n          onChange={(e) => setCountry(e.target.value)}\n          autoComplete='country'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your postal/zip code</span>\n          <span className='label-text-alt'>Postal Code</span>\n        </label>\n        <input\n          name='postcode'\n          placeholder='Postcode'\n          type='text'\n          onChange={(e) => setPostcode(e.target.value)}\n          autoComplete='postal-code'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n      {submitted === false ? (\n        street !== '' ? (\n          city !== '' ? (\n            state !== '' ? (\n              postcode !== '' ? (\n                country !== '' ? (\n                  <div>\n                    <div className='mt-6 form-control'>\n                      <button className='btn btn-primary'>\n                        Submit Address\n                      </button>\n                    </div>\n                  </div>\n                ) : null\n              ) : null\n            ) : null\n          ) : null\n        ) : null\n      ) : (\n        <div className='shadow-lg alert alert-success'>\n          <div>\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              className='flex-shrink-0 w-6 h-6 stroke-current'\n              fill='none'\n              viewBox='0 0 24 24'>\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth='2'\n                d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n              />\n            </svg>\n            <span>You're all set!</span>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n}\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/BarsDisplay.js",["120","121","122","123","124","125"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarPage.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/bars.jsx",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/barCocktails.jsx",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Loading.js",[],[],{"ruleId":"126","severity":1,"message":"127","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":8,"column":16,"nodeType":"128","messageId":"129","endLine":8,"endColumn":28},{"ruleId":"126","severity":1,"message":"131","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":9,"column":16,"nodeType":"128","messageId":"129","endLine":9,"endColumn":28},{"ruleId":"126","severity":1,"message":"133","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":14},{"ruleId":"126","severity":1,"message":"134","line":15,"column":11,"nodeType":"128","messageId":"129","endLine":15,"endColumn":15},{"ruleId":"126","severity":1,"message":"135","line":18,"column":10,"nodeType":"128","messageId":"129","endLine":18,"endColumn":19},{"ruleId":"126","severity":1,"message":"136","line":18,"column":21,"nodeType":"128","messageId":"129","endLine":18,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":35,"column":6,"nodeType":"139","endLine":35,"endColumn":8,"suggestions":"140"},{"ruleId":"126","severity":1,"message":"141","line":40,"column":12,"nodeType":"128","messageId":"129","endLine":40,"endColumn":21},{"ruleId":"126","severity":1,"message":"142","line":45,"column":12,"nodeType":"128","messageId":"129","endLine":45,"endColumn":22},{"ruleId":"126","severity":1,"message":"143","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":19},{"ruleId":"126","severity":1,"message":"130","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"144","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":23},{"ruleId":"126","severity":1,"message":"143","line":3,"column":22,"nodeType":"128","messageId":"129","endLine":3,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":4,"column":16,"nodeType":"128","messageId":"129","endLine":4,"endColumn":28},{"ruleId":"126","severity":1,"message":"131","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":5,"column":16,"nodeType":"128","messageId":"129","endLine":5,"endColumn":28},{"ruleId":"126","severity":1,"message":"145","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":17},{"ruleId":"126","severity":1,"message":"146","line":6,"column":25,"nodeType":"128","messageId":"129","endLine":6,"endColumn":33},{"ruleId":"126","severity":1,"message":"134","line":10,"column":11,"nodeType":"128","messageId":"129","endLine":10,"endColumn":15},{"ruleId":"126","severity":1,"message":"143","line":1,"column":20,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"145","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"130","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":22},{"ruleId":"126","severity":1,"message":"143","line":1,"column":20,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"133","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":28},{"ruleId":"126","severity":1,"message":"131","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":4,"column":16,"nodeType":"128","messageId":"129","endLine":4,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":9,"column":20,"nodeType":"149","messageId":"150","endLine":9,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":61,"column":30,"nodeType":"153","messageId":"154","endLine":61,"endColumn":32},{"ruleId":"155","severity":2,"message":"156","line":1,"column":1,"nodeType":"157","endLine":1,"endColumn":35,"suppressions":"158"},{"ruleId":"126","severity":1,"message":"159","line":4,"column":27,"nodeType":"128","messageId":"129","endLine":4,"endColumn":38},{"ruleId":"126","severity":1,"message":"143","line":4,"column":40,"nodeType":"128","messageId":"129","endLine":4,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":6,"column":16,"nodeType":"128","messageId":"129","endLine":6,"endColumn":28},{"ruleId":"126","severity":1,"message":"160","line":10,"column":9,"nodeType":"128","messageId":"129","endLine":10,"endColumn":17},{"ruleId":"126","severity":1,"message":"161","line":19,"column":10,"nodeType":"128","messageId":"129","endLine":19,"endColumn":17},{"ruleId":"126","severity":1,"message":"162","line":20,"column":10,"nodeType":"128","messageId":"129","endLine":20,"endColumn":15},{"ruleId":"126","severity":1,"message":"163","line":21,"column":10,"nodeType":"128","messageId":"129","endLine":21,"endColumn":21},{"ruleId":"126","severity":1,"message":"133","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":5,"column":16,"nodeType":"128","messageId":"129","endLine":5,"endColumn":28},{"ruleId":"126","severity":1,"message":"160","line":10,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":15},{"ruleId":"137","severity":1,"message":"164","line":14,"column":6,"nodeType":"139","endLine":14,"endColumn":12,"suggestions":"165"},{"ruleId":"151","severity":1,"message":"166","line":40,"column":31,"nodeType":"153","messageId":"167","endLine":40,"endColumn":33},"no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","'UserProvider' is defined but never used.","'bars' is defined but never used.","'BarsProvider' is defined but never used.","'Link' is defined but never used.","'bars' is assigned a value but never used.","'mapLoaded' is assigned a value but never used.","'setMapLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'logUserIn' is defined but never used.","'logUserOut' is defined but never used.","'useEffect' is defined but never used.","'UserAddressForm' is defined but never used.","'NavLink' is defined but never used.","'Navigate' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-webpack-loader-syntax","Unexpected '!' in '!mapbox-gl'. Do not use import syntax to configure webpack loaders.","ImportDeclaration",["169"],"'useCallback' is defined but never used.","'navigate' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","'errorsExist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSearchTerm'. Either include it or remove the dependency array. If 'setSearchTerm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd",{"desc":"171","fix":"172"},{"kind":"173","justification":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [setUser]",{"range":"177","text":"178"},"directive","","Update the dependencies array to be: [bars, setSearchTerm]",{"range":"179","text":"180"},[1121,1123],"[setUser]",[423,429],"[bars, setSearchTerm]"]