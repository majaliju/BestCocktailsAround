[{"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js":"1","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js":"2","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js":"3","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js":"4","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js":"5","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js":"6","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js":"7","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapBoxReddit.js":"8","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/user.jsx":"9"},{"size":437,"mtime":1682122166881,"results":"10","hashOfConfig":"11"},{"size":2284,"mtime":1682374174427,"results":"12","hashOfConfig":"11"},{"size":5116,"mtime":1682122445354,"results":"13","hashOfConfig":"11"},{"size":980,"mtime":1682374186388,"results":"14","hashOfConfig":"11"},{"size":6772,"mtime":1682121850472,"results":"15","hashOfConfig":"11"},{"size":6010,"mtime":1682121686518,"results":"16","hashOfConfig":"11"},{"size":1026,"mtime":1682021170663,"results":"17","hashOfConfig":"11"},{"size":1402,"mtime":1681862916216,"results":"18","hashOfConfig":"11"},{"size":521,"mtime":1682122301132,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"hwmzer",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"23"},"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js",[],[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js",["55","56","57","58","59","60"],[],"import { useState, useEffect, useContext } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Homepage from './Homepage';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport { user, UserProvider, UserContext } from '../context/user';\nimport { Link } from 'react-router-dom';\nimport UserAddressForm from './UserAddress';\n\nfunction App() {\n  // const [user, setUser] = useState({});\n  const { user, setUser } = useContext(UserContext);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [mapLoaded, setMapLoaded] = useState(false);\n\n  //! this useEffect now is moved basically to the context/user.jsx, where it is validated there instead\n  useEffect(() => {\n    fetch('/me').then((response) => {\n      if (response.ok) {\n        response.json().then((user) => {\n          console.log('within /me, the response is: ', user);\n          setUser(user);\n          setLoggedIn(true);\n        });\n      } else {\n        setUser({});\n        setLoggedIn(false);\n      }\n    });\n  }, []);\n\n  console.log('user in the App route: ', user);\n\n  // //^ both for logging user in & updating values of LoggedIn & currentUser\n  // function onLogin(user) {\n  //   setUser(user);\n  //   setLoggedIn(true);\n  // }\n\n  // //^ to log the user out & also & updating values of LoggedIn & currentUser\n  // function onLogout() {\n  //   setUser({});\n  //   setLoggedIn(false);\n  // }\n\n  return (\n    <div>\n      <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n      <Routes>\n        <Route path='/' element={<Homepage loggedIn={loggedIn} />} />\n        <Route\n          path='/addressUpdate'\n          element={<UserAddressForm loggedIn={loggedIn} />}\n        />\n        {/* <Route path='/theBestList' element={<TheBestRankings />} />\n          <Route path='/bars' element={<BarsDisplay />}>\n            <Route path=':id' element={<EachBarPage />} />\n          </Route>\n          <Route path='/cocktails' element={<CocktailsDisplay />}>\n            <Route path=':id' element={<EachBarPage />} />\n          </Route> */}\n        <Route path='/login' element={<Login setLoggedIn={setLoggedIn} />} />\n        <Route path='/signup' element={<SignUp setLoggedIn={setLoggedIn} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js",["61","62"],[],"/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport { NavLink, Link } from 'react-router-dom';\nimport { useEffect, useContext } from 'react';\nimport { UserProvider, UserContext } from '../context/user';\n\nfunction Header({ loggedIn, setLoggedIn }) {\n  const { user, setUser } = useContext(UserContext);\n\n  function handleLogout() {\n    fetch(`/logout`, {\n      method: 'DELETE',\n    }).then(() => {\n      setUser({});\n      setLoggedIn(false);\n    });\n  }\n\n  return (\n    <div>\n      <div className='bg-primary navbar text-primary-content'>\n        <div className='navbar-start'>\n          <div className='dropdown'>\n            <label tabIndex={0} className='btn btn-ghost sm:hidden'>\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                className='w-5 h-5'\n                fill='none'\n                viewBox='0 0 24 24'\n                stroke='currentColor'>\n                <path\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                  strokeWidth='2'\n                  d='M4 6h16M4 12h8m-8 6h16'\n                />\n              </svg>\n            </label>\n            <ul\n              tabIndex={0}\n              className='w-56 p-2 mt-3 shadow menu menu-compact dropdown-content bg-base-100 rounded-box'>\n              <li>\n                <NavLink to='/' className='font-bold uppercase'>\n                  the best\n                </NavLink>\n              </li>\n              {/* <li>\n                <NavLink to='/concerts' className='font-bold uppercase'>\n                  concerts\n                </NavLink>\n              </li> */}\n\n              <div>\n                {/* {currentUser === (null || '') && (\n                  <li>\n                    <NavLink className='font-bold uppercase' to='/login'>\n                      login\n                    </NavLink>\n                  </li>\n                )} */}\n                {/* {currentUser !== (null || '') && (\n                  <div>\n                    <li>\n                      <NavLink className='font-bold uppercase' to='/'>\n                        <button\n                          className='font-bold uppercase'\n                          onClick={handleLogout}>\n                          logout {currentUser.username}\n                        </button>\n                      </NavLink>\n                    </li>\n                  </div>\n                )} */}\n              </div>\n            </ul>\n          </div>\n          <div className='navbar-start'>\n            <div className='flex-auto p-4'>\n              <Link to='/'>\n                <h3 className='text-5xl normal-case border-none btn btn-secondary btn-outline'>\n                  COCKTAILS?\n                </h3>\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className='navbar-center sm:flex'>\n          <div className='flex-auto'>\n            <ul className='p-0 menu menu-horizontal'>\n              <li>\n                <NavLink\n                  to='/best'\n                  className='font-bold uppercase border-none btn btn-outline'>\n                  <h3 className='font-bold uppercase'>where's the best?</h3>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to='/bars'\n                  className='font-bold uppercase border-none btn btn-outline '>\n                  <h3 className='font-bold uppercase'>all bars</h3>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to='/cocktails'\n                  className='font-bold uppercase border-none btn btn-outline '>\n                  <h3 className='font-bold uppercase'>all cocktails</h3>\n                </NavLink>\n              </li>\n              {/* {loggedIn === true && (\n                <li>\n                  <NavLink\n                    to='/thisUser'\n                    state={{ thisUser: currentUser }}\n                    className='font-bold uppercase border-none btn btn-outline'>\n                    Your Activity\n                  </NavLink>\n                </li>\n              )} */}\n            </ul>\n          </div>\n        </div>\n        <div className='hidden navbar-end sm:flex'>\n          <div className='flex-initial'>\n            <ul className='float-right p-0 menu menu-horizontal'>\n              {loggedIn === false && (\n                <li>\n                  <NavLink\n                    className='font-bold uppercase border-none btn btn-outline'\n                    to='/login'>\n                    LOGIN\n                  </NavLink>\n                </li>\n              )}\n              {loggedIn === true && (\n                <div>\n                  <li>\n                    <button\n                      className='font-bold uppercase border-none btn btn-outline'\n                      onClick={handleLogout}>\n                      logout {user.username}\n                    </button>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js",["63","64","65","66"],[],"import MapboxMap from './MapboxMap';\nimport UserAddressForm from './UserAddress';\nimport { useContext } from 'react';\nimport { user, UserProvider, UserContext } from '../context/user';\nimport { NavLink, Link, Navigate } from 'react-router-dom';\n\nfunction Homepage({ loggedIn }) {\n  const { user } = useContext(UserContext);\n  console.log('user in HomePage', user);\n  return (\n    <div>\n      {loggedIn === true ? (\n        <div>\n          <NavLink to='/addressUpdate' className='font-bold uppercase'>\n            Submit an Address\n          </NavLink>\n          <h1>loggedIn is NOT false (its true)</h1>\n          <h1 className='text-4xl text-secondary'>\n            Welcome back {user.username}!\n          </h1>\n          <MapboxMap user={user} />\n        </div>\n      ) : (\n        <Navigate to='/login' replace={true} />\n      )}\n\n      {/* write a loading condition here\n      if MapBoxMap didn't load, render <Loading />\n      */}\n    </div>\n  );\n}\n\nexport default Homepage;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js",["67","68","69"],[],"import { useState, useEffect, useContext } from 'react';\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\nimport { UserProvider, UserContext } from '../context/user';\n\nfunction Login({ setLoggedIn }) {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((info) => {\n          console.log('response info in /login submit: ', info);\n          setUser(info);\n          setLoggedIn(true);\n          setError('');\n          setErrorsExist(false);\n          setSuccess('success!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e: ', e);\n          setErrorsExist(true);\n          setError(e.error);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n\n                <span>{error}</span>\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            LOGIN\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type your password and you can log in'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  <div>\n                    <div class='form-control mt-6'>\n                      <button class='btn btn-primary'>Login</button>\n                    </div>\n                  </div>\n                ) : null\n              ) : null\n            ) : (\n              <div className='shadow-lg alert alert-success'>\n                <div>\n                  <svg\n                    xmlns='http://www.w3.org/2000/svg'\n                    className='flex-shrink-0 w-6 h-6 stroke-current'\n                    fill='none'\n                    viewBox='0 0 24 24'>\n                    <path\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='2'\n                      d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                    />\n                  </svg>\n                  <span>Welcome! You're logged in!</span>\n                </div>\n              </div>\n            )}\n            <div>\n              <label>\n                <Link\n                  to='/signup'\n                  type='submit'\n                  class='btn btn-ghost w-full font-bold form-control text-secondary uppercase'>\n                  First time here? Sign up!\n                </Link>\n              </label>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n// {submitted === false ? (\n//   <div>\n//     <div class='form-control mt-6'>\n//       <button class='btn btn-primary'>Login</button>\n//     </div>\n//     <label>\n//       <Link\n//         to='/signup'\n//         type='submit'\n//         class='btn btn-ghost w-full font-bold form-control text-secondary-content uppercase'>\n//         First time here? Sign up!\n//       </Link>\n//     </label>\n//   </div>\n// ) : (\n//   <div className='shadow-lg alert alert-success'>\n//     <div>\n//       <svg\n//         xmlns='http://www.w3.org/2000/svg'\n//         className='flex-shrink-0 w-6 h-6 stroke-current'\n//         fill='none'\n//         viewBox='0 0 24 24'>\n//         <path\n//           strokeLinecap='round'\n//           strokeLinejoin='round'\n//           strokeWidth='2'\n//           d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n//         />\n//       </svg>\n//       <span>Welcome! You're logged in!</span>\n//     </div>\n//   </div>\n// )}\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js",["70","71","72","73"],[],"import { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { user, UserProvider, UserContext } from '../context/user';\n\nfunction SignUp({ setLoggedIn }) {\n  //todo\n  //^ stylize this page way better\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const [errorArray, setErrorArray] = useState([]);\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((newUser) => {\n          console.log('newUser: ', newUser);\n          setUser(newUser);\n          setLoggedIn(true);\n          setErrorArray([]);\n          setErrorsExist(false);\n          setSuccess('Your post has been created!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e. errors within bad response: ', e.errors);\n          // set the errorString to e.errors.join(*join with a comma*)\n          setErrorsExist(true);\n          setErrorArray(e.errors);\n          console.log('errorArray state within bad response: ', errorArray);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n                {errorArray.map((eachError) => (\n                  <span>{eachError}</span>\n                ))}\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            SIGNUP\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your desired username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type in a new password'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password confirmation</span>\n              </label>\n              <input\n                type='passwordConfirmation'\n                id='passwordConfirmation'\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                placeholder='then, type it in again to be sure'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  passwordConfirmation !== '' ? (\n                    <div>\n                      <div class='form-control mt-6'>\n                        <button type='submit' class='btn btn-primary'>\n                          Sign Up!\n                        </button>\n                      </div>\n                    </div>\n                  ) : null\n                ) : null\n              ) : null\n            ) : null}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js",["74","75","76","77"],["78"],"import mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { useState, useRef, useEffect } from 'react';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoibWFqYWxpanUiLCJhIjoiY2xnbXZ5MjR4MDl3cDNzcWFvN3Nsc3F0aSJ9.eDrOKKxTWcKvQfdCuDIiFA';\n\nfunction MapboxMap({ user }) {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lat, setLat] = useState(40.7125729);\n  const [lng, setLng] = useState(-73.943824);\n  const [zoom, setZoom] = useState(9);\n\n  console.log('user within MapBox', user);\n  console.log('user.latitude: ', user.latitude);\n  console.log('user.longitude: ', user.longitude);\n  console.log('lat: ', lat);\n  console.log('lng: ', lng);\n\n  useEffect(() => {\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/dark-v11',\n      center: [lng, lat],\n      zoom: zoom,\n    });\n  }, []);\n\n  return (\n    <div>\n      <div ref={mapContainer} className='map-container' />\n    </div>\n  );\n}\n\nexport default MapboxMap;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapBoxReddit.js",[],["79"],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/user.jsx",["80"],[],"import React, {useState, useEffect} from 'react';\n\nconst UserContext = React.createContext();\n\nfunction UserProvider({children}){\n  const [user, setUser] = useState({});\n\n  // useEffect(() => {\n  //   fetch('/me')\n  //   .then(res => {\n  //     if (res.ok){\n  //       res.json().then(currentUser => setUser(currentUser))\n  //     }\n  //   })\n  // }, []);\n  \n  return (\n      <UserContext.Provider value={{user, setUser}}> \n          {children} \n      </UserContext.Provider> \n  )\n\n}\n\nexport {UserContext, UserProvider };",{"ruleId":"81","severity":1,"message":"82","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":7,"column":16,"nodeType":"83","messageId":"84","endLine":7,"endColumn":28},{"ruleId":"81","severity":1,"message":"86","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":14},{"ruleId":"81","severity":1,"message":"87","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":19},{"ruleId":"81","severity":1,"message":"88","line":15,"column":21,"nodeType":"83","messageId":"84","endLine":15,"endColumn":33},{"ruleId":"89","severity":1,"message":"90","line":31,"column":6,"nodeType":"91","endLine":31,"endColumn":8,"suggestions":"92"},{"ruleId":"81","severity":1,"message":"93","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":22},{"ruleId":"81","severity":1,"message":"94","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":4,"column":16,"nodeType":"83","messageId":"84","endLine":4,"endColumn":28},{"ruleId":"81","severity":1,"message":"86","line":5,"column":19,"nodeType":"83","messageId":"84","endLine":5,"endColumn":23},{"ruleId":"81","severity":1,"message":"93","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},{"ruleId":"81","severity":1,"message":"95","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":17},{"ruleId":"81","severity":1,"message":"85","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"81","severity":1,"message":"93","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},{"ruleId":"81","severity":1,"message":"86","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":3,"column":16,"nodeType":"83","messageId":"84","endLine":3,"endColumn":28},{"ruleId":"81","severity":1,"message":"96","line":10,"column":15,"nodeType":"83","messageId":"84","endLine":10,"endColumn":21},{"ruleId":"81","severity":1,"message":"97","line":11,"column":15,"nodeType":"83","messageId":"84","endLine":11,"endColumn":21},{"ruleId":"81","severity":1,"message":"98","line":12,"column":16,"nodeType":"83","messageId":"84","endLine":12,"endColumn":23},{"ruleId":"89","severity":1,"message":"99","line":27,"column":6,"nodeType":"91","endLine":27,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":2,"message":"102","line":1,"column":1,"nodeType":"103","endLine":1,"endColumn":35,"suppressions":"104"},{"ruleId":"101","severity":2,"message":"102","line":1,"column":1,"nodeType":"103","endLine":1,"endColumn":34,"suppressions":"105"},{"ruleId":"81","severity":1,"message":"93","line":1,"column":26,"nodeType":"83","messageId":"84","endLine":1,"endColumn":35},"no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","'UserProvider' is defined but never used.","'Link' is defined but never used.","'mapLoaded' is assigned a value but never used.","'setMapLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'useEffect' is defined but never used.","'UserAddressForm' is defined but never used.","'NavLink' is defined but never used.","'setLat' is assigned a value but never used.","'setLng' is assigned a value but never used.","'setZoom' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'lat', 'lng', and 'zoom'. Either include them or remove the dependency array.",["107"],"import/no-webpack-loader-syntax","Unexpected '!' in '!mapbox-gl'. Do not use import syntax to configure webpack loaders.","ImportDeclaration",["108"],["109"],{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"kind":"114","justification":"115"},{"kind":"114","justification":"115"},"Update the dependencies array to be: [setUser]",{"range":"116","text":"117"},"Update the dependencies array to be: [lat, lng, zoom]",{"range":"118","text":"119"},"directive","",[1047,1049],"[setUser]",[895,897],"[lat, lng, zoom]"]