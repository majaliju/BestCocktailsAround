[{"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js":"1","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js":"2","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js":"3","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js":"4","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js":"5","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js":"6","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js":"7","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/user.jsx":"8","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/UserAddressForm.js":"9","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/BarsDisplay.js":"10","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarPage.js":"11","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/bars.jsx":"12","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/barCocktails.jsx":"13","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Loading.js":"14","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/BarCocktailsDisplay.js":"15","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarCocktailPage.js":"16","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/TheBestRankings.js":"17","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SubmitReviewForm.js":"18","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarCocktailCard.js":"19","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarCard.js":"20"},{"size":657,"mtime":1682476127892,"results":"21","hashOfConfig":"22"},{"size":3143,"mtime":1682562387643,"results":"23","hashOfConfig":"22"},{"size":5139,"mtime":1682560547988,"results":"24","hashOfConfig":"22"},{"size":1820,"mtime":1682554315142,"results":"25","hashOfConfig":"22"},{"size":6772,"mtime":1682121850472,"results":"26","hashOfConfig":"22"},{"size":6010,"mtime":1682121686518,"results":"27","hashOfConfig":"22"},{"size":2639,"mtime":1682554228149,"results":"28","hashOfConfig":"22"},{"size":542,"mtime":1682479844704,"results":"29","hashOfConfig":"22"},{"size":5839,"mtime":1682455537876,"results":"30","hashOfConfig":"22"},{"size":2023,"mtime":1682561828246,"results":"31","hashOfConfig":"22"},{"size":272,"mtime":1682565465535,"results":"32","hashOfConfig":"22"},{"size":502,"mtime":1682476480782,"results":"33","hashOfConfig":"22"},{"size":627,"mtime":1682476127892,"results":"34","hashOfConfig":"22"},{"size":552,"mtime":1682476127891,"results":"35","hashOfConfig":"22"},{"size":2524,"mtime":1682561168613,"results":"36","hashOfConfig":"22"},{"size":88,"mtime":1682476127891,"results":"37","hashOfConfig":"22"},{"size":228,"mtime":1682546683882,"results":"38","hashOfConfig":"22"},{"size":133,"mtime":1682560197239,"results":"39","hashOfConfig":"22"},{"size":166,"mtime":1682561179033,"results":"40","hashOfConfig":"22"},{"size":1268,"mtime":1682562918010,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hwmzer",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/index.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/App.js",["109","110","111","112","113","114","115","116","117"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Header.js",["118","119"],[],"/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport { NavLink, Link } from 'react-router-dom';\nimport { useEffect, useContext } from 'react';\nimport { UserProvider, UserContext } from '../context/user';\n\nfunction Header({ loggedIn, setLoggedIn }) {\n  const { user, setUser } = useContext(UserContext);\n\n  function handleLogout() {\n    fetch(`/logout`, {\n      method: 'DELETE',\n    }).then(() => {\n      setUser({});\n      setLoggedIn(false);\n    });\n  }\n\n  return (\n    <div>\n      <div className='bg-primary navbar text-primary-content'>\n        <div className='navbar-start'>\n          <div className='dropdown'>\n            <label tabIndex={0} className='btn btn-ghost sm:hidden'>\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                className='w-5 h-5'\n                fill='none'\n                viewBox='0 0 24 24'\n                stroke='currentColor'>\n                <path\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                  strokeWidth='2'\n                  d='M4 6h16M4 12h8m-8 6h16'\n                />\n              </svg>\n            </label>\n            <ul\n              tabIndex={0}\n              className='w-56 p-2 mt-3 shadow menu menu-compact dropdown-content bg-base-100 rounded-box'>\n              <li>\n                <NavLink to='/' className='font-bold uppercase'>\n                  the best\n                </NavLink>\n              </li>\n              {/* <li>\n                <NavLink to='/concerts' className='font-bold uppercase'>\n                  concerts\n                </NavLink>\n              </li> */}\n\n              <div>\n                {/* {currentUser === (null || '') && (\n                  <li>\n                    <NavLink className='font-bold uppercase' to='/login'>\n                      login\n                    </NavLink>\n                  </li>\n                )} */}\n                {/* {currentUser !== (null || '') && (\n                  <div>\n                    <li>\n                      <NavLink className='font-bold uppercase' to='/'>\n                        <button\n                          className='font-bold uppercase'\n                          onClick={handleLogout}>\n                          logout {currentUser.username}\n                        </button>\n                      </NavLink>\n                    </li>\n                  </div>\n                )} */}\n              </div>\n            </ul>\n          </div>\n          <div className='navbar-start'>\n            <div className='flex-auto p-4'>\n              <Link to='/'>\n                <h3 className='text-5xl normal-case border-none btn btn-secondary btn-outline'>\n                  COCKTAILS?\n                </h3>\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className='navbar-center sm:flex'>\n          <div className='flex-auto'>\n            <ul className='p-0 menu menu-horizontal'>\n              <li>\n                <NavLink\n                  to='/theBestList'\n                  className='font-bold uppercase border-none btn btn-outline'>\n                  <h3 className='font-bold uppercase'>where's the best?</h3>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to='/bars'\n                  className='font-bold uppercase border-none btn btn-outline '>\n                  <h3 className='font-bold uppercase'>bars near you</h3>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to='/bar_cocktails'\n                  className='font-bold uppercase border-none btn btn-outline '>\n                  <h3 className='font-bold uppercase'>the cocktail library</h3>\n                </NavLink>\n              </li>\n              {/* {loggedIn === true && (\n                <li>\n                  <NavLink\n                    to='/thisUser'\n                    state={{ thisUser: currentUser }}\n                    className='font-bold uppercase border-none btn btn-outline'>\n                    Your Activity\n                  </NavLink>\n                </li>\n              )} */}\n            </ul>\n          </div>\n        </div>\n        <div className='hidden navbar-end sm:flex'>\n          <div className='flex-initial'>\n            <ul className='float-right p-0 menu menu-horizontal'>\n              {loggedIn === false && (\n                <li>\n                  <NavLink\n                    className='font-bold uppercase border-none btn btn-outline'\n                    to='/login'>\n                    LOGIN\n                  </NavLink>\n                </li>\n              )}\n              {loggedIn === true && (\n                <div>\n                  <li>\n                    <button\n                      className='font-bold uppercase border-none btn btn-outline'\n                      onClick={handleLogout}>\n                      logout {user.username}\n                    </button>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n",[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Homepage.js",["120","121","122","123","124","125","126","127","128"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Login.js",["129","130","131"],[],"import { useState, useEffect, useContext } from 'react';\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\nimport { UserProvider, UserContext } from '../context/user';\n\nfunction Login({ setLoggedIn }) {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((info) => {\n          console.log('response info in /login submit: ', info);\n          setUser(info);\n          setLoggedIn(true);\n          setError('');\n          setErrorsExist(false);\n          setSuccess('success!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e: ', e);\n          setErrorsExist(true);\n          setError(e.error);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n\n                <span>{error}</span>\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            LOGIN\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type your password and you can log in'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  <div>\n                    <div class='form-control mt-6'>\n                      <button class='btn btn-primary'>Login</button>\n                    </div>\n                  </div>\n                ) : null\n              ) : null\n            ) : (\n              <div className='shadow-lg alert alert-success'>\n                <div>\n                  <svg\n                    xmlns='http://www.w3.org/2000/svg'\n                    className='flex-shrink-0 w-6 h-6 stroke-current'\n                    fill='none'\n                    viewBox='0 0 24 24'>\n                    <path\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='2'\n                      d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                    />\n                  </svg>\n                  <span>Welcome! You're logged in!</span>\n                </div>\n              </div>\n            )}\n            <div>\n              <label>\n                <Link\n                  to='/signup'\n                  type='submit'\n                  class='btn btn-ghost w-full font-bold form-control text-secondary uppercase'>\n                  First time here? Sign up!\n                </Link>\n              </label>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n// {submitted === false ? (\n//   <div>\n//     <div class='form-control mt-6'>\n//       <button class='btn btn-primary'>Login</button>\n//     </div>\n//     <label>\n//       <Link\n//         to='/signup'\n//         type='submit'\n//         class='btn btn-ghost w-full font-bold form-control text-secondary-content uppercase'>\n//         First time here? Sign up!\n//       </Link>\n//     </label>\n//   </div>\n// ) : (\n//   <div className='shadow-lg alert alert-success'>\n//     <div>\n//       <svg\n//         xmlns='http://www.w3.org/2000/svg'\n//         className='flex-shrink-0 w-6 h-6 stroke-current'\n//         fill='none'\n//         viewBox='0 0 24 24'>\n//         <path\n//           strokeLinecap='round'\n//           strokeLinejoin='round'\n//           strokeWidth='2'\n//           d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n//         />\n//       </svg>\n//       <span>Welcome! You're logged in!</span>\n//     </div>\n//   </div>\n// )}\n",[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SignUp.js",["132","133","134","135"],[],"import { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { user, UserProvider, UserContext } from '../context/user';\n\nfunction SignUp({ setLoggedIn }) {\n  //todo\n  //^ stylize this page way better\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const [errorArray, setErrorArray] = useState([]);\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const { setUser } = useContext(UserContext);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((newUser) => {\n          console.log('newUser: ', newUser);\n          setUser(newUser);\n          setLoggedIn(true);\n          setErrorArray([]);\n          setErrorsExist(false);\n          setSuccess('Your post has been created!');\n          setSubmitted(true);\n          navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e. errors within bad response: ', e.errors);\n          // set the errorString to e.errors.join(*join with a comma*)\n          setErrorsExist(true);\n          setErrorArray(e.errors);\n          console.log('errorArray state within bad response: ', errorArray);\n        });\n      }\n    });\n  }\n\n  return (\n    <div>\n      <div className='max-w-screen-xl px-4 py-16 mx-auto sm:px-6 lg:px-8'>\n        <div className='max-w-lg mx-auto'>\n          {success !== '' ? (\n            <div className='shadow-lg alert alert-success'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n                  />\n                </svg>\n                <span>{success}</span>\n              </div>\n            </div>\n          ) : null}\n\n          {errorsExist !== false ? (\n            <div className='shadow-lg alert alert-warning'>\n              <div>\n                <svg\n                  xmlns='http://www.w3.org/2000/svg'\n                  className='flex-shrink-0 w-6 h-6 stroke-current'\n                  fill='none'\n                  viewBox='0 0 24 24'>\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z'\n                  />\n                </svg>\n                {errorArray.map((eachError) => (\n                  <span>{eachError}</span>\n                ))}\n              </div>\n            </div>\n          ) : null}\n\n          <h1 className='text-2xl font-bold text-center text-white sm:text-3xl'>\n            SIGNUP\n          </h1>\n          <form\n            onSubmit={handleSubmit}\n            className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>username</span>\n              </label>\n              <input\n                type='text'\n                id='username'\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder='first, type your desired username here'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password</span>\n              </label>\n              <input\n                type='password'\n                id='password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='then, type in a new password'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n            <div class='form-control'>\n              <label class='label'>\n                <span class='label-text uppercase'>password confirmation</span>\n              </label>\n              <input\n                type='passwordConfirmation'\n                id='passwordConfirmation'\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                placeholder='then, type it in again to be sure'\n                className='w-full max-w-xl input input-bordered input-primary'\n              />\n            </div>\n\n            {submitted === false ? (\n              username !== '' ? (\n                password !== '' ? (\n                  passwordConfirmation !== '' ? (\n                    <div>\n                      <div class='form-control mt-6'>\n                        <button type='submit' class='btn btn-primary'>\n                          Sign Up!\n                        </button>\n                      </div>\n                    </div>\n                  ) : null\n                ) : null\n              ) : null\n            ) : null}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/MapboxMap.js",["136","137","138","139","140","141"],["142"],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/user.jsx",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/UserAddressForm.js",["143","144","145","146","147","148","149","150"],[],"// code came from this mapbox direct tutorial\n// https://docs.mapbox.com/mapbox-search-js/example/autofill-checkout-react/\n\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { AddressAutofill } from '@mapbox/search-js-react';\nimport { user, UserProvider, UserContext } from '../context/user';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function UserAddressForm() {\n  const navigate = useNavigate();\n  const { user } = useContext(UserContext);\n\n  const [street, setStreet] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [country, setCountry] = useState('');\n  const [postcode, setPostcode] = useState('');\n\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [errorsExist, setErrorsExist] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  console.log('street in this component: ', street);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`/users/${user.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify({\n        street,\n        city,\n        state,\n        country,\n        postcode,\n      }),\n    }).then((response) => {\n      if (response.status >= 200 && response.status <= 299) {\n        response.json().then((info) => {\n          console.log('response of user address form: ', info);\n          setError('');\n          setErrorsExist(false);\n          setSuccess('success!');\n          setSubmitted(true);\n          // set timeOut function to navigate after 1 second\n          // navigate('/');\n        });\n      } else {\n        response.json().then((e) => {\n          console.log('e: ', e);\n          setErrorsExist(true);\n          setError(e.error);\n        });\n      }\n    });\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className='p-8 mt-2 mb-0 space-y-4 rounded-lg shadow-2xl'>\n      <AddressAutofill accessToken='pk.eyJ1IjoibWFqYWxpanUiLCJhIjoiY2xnbXZ5MjR4MDl3cDNzcWFvN3Nsc3F0aSJ9.eDrOKKxTWcKvQfdCuDIiFA'>\n        <div className='w-full max-w-xs form-control'>\n          <label className='label'>\n            <span className='label-text'>Type in a street...</span>\n            <span className='label-text-alt'>Street</span>\n          </label>\n          <input\n            name='street'\n            placeholder='Street'\n            type='text'\n            onChange={(e) => setStreet(e.target.value)}\n            autoComplete='address-line1'\n            className='w-full max-w-xs input input-bordered'\n          />\n        </div>\n      </AddressAutofill>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your state</span>\n          <span className='label-text-alt'>State</span>\n        </label>\n        <input\n          name='state'\n          placeholder='State'\n          type='text'\n          onChange={(e) => setState(e.target.value)}\n          autoComplete='address-level1'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your city</span>\n          <span className='label-text-alt'>City</span>\n        </label>\n        <input\n          name='city'\n          placeholder='City'\n          type='text'\n          onChange={(e) => setCity(e.target.value)}\n          autoComplete='address-level2'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your country</span>\n          <span className='label-text-alt'>Country</span>\n        </label>\n        <input\n          name='country'\n          placeholder='Country'\n          type='text'\n          onChange={(e) => setCountry(e.target.value)}\n          autoComplete='country'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n\n      <div className='w-full max-w-xs form-control'>\n        <label className='label'>\n          <span className='label-text'>Enter your postal/zip code</span>\n          <span className='label-text-alt'>Postal Code</span>\n        </label>\n        <input\n          name='postcode'\n          placeholder='Postcode'\n          type='text'\n          onChange={(e) => setPostcode(e.target.value)}\n          autoComplete='postal-code'\n          className='w-full max-w-xs input input-bordered'\n        />\n      </div>\n      {submitted === false ? (\n        street !== '' ? (\n          city !== '' ? (\n            state !== '' ? (\n              postcode !== '' ? (\n                country !== '' ? (\n                  <div>\n                    <div className='mt-6 form-control'>\n                      <button className='btn btn-primary'>\n                        Submit Address\n                      </button>\n                    </div>\n                  </div>\n                ) : null\n              ) : null\n            ) : null\n          ) : null\n        ) : null\n      ) : (\n        <div className='shadow-lg alert alert-success'>\n          <div>\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              className='flex-shrink-0 w-6 h-6 stroke-current'\n              fill='none'\n              viewBox='0 0 24 24'>\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth='2'\n                d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'\n              />\n            </svg>\n            <span>You're all set!</span>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n}\n","/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/BarsDisplay.js",["151","152","153","154","155","156"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarPage.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/bars.jsx",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/context/barCocktails.jsx",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/Loading.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/BarCocktailsDisplay.js",["157","158","159","160","161","162","163"],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarCocktailPage.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/TheBestRankings.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/SubmitReviewForm.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarCocktailCard.js",[],[],"/Users/majlind/Development/code/project5/best-cocktails-app/client/src/components/EachBarCard.js",["164"],[],"import Loading from './Loading';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction EachBarCard({ bar }) {\n  const navigate = useNavigate();\n\n  console.log('bar within EBC: ', bar);\n\n  return (\n    <div>\n      <div className='py-6 bg-base-900 sm:py-8 lg:py-'>\n        {bar !== undefined ? (\n          <div className='max-w-screen-xl px-4 mx-auto md:px-8'>\n            <div className='flex justify-center'>\n              <div className='justify-center shadow-2xl card w-96 bg-base-500 bg-neutral text-neutral-content'>\n                <div className='items-center text-center card-body'>\n                  <h2 className='card-title'>{bar.name}</h2>\n                </div>\n                <div className='justify-center card-actions'>\n                  <div className='items-center text-center card-body'>\n                    {bar.address}\n                  </div>\n                  <Link\n                    to={`${bar.id}`}\n                    className='justify-center w-full btn btn-primary btn-outline'>\n                    VISIT BAR PAGE\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EachBarCard;\n",{"ruleId":"165","severity":1,"message":"166","line":13,"column":10,"nodeType":"167","messageId":"168","endLine":13,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":14,"column":10,"nodeType":"167","messageId":"168","endLine":14,"endColumn":14},{"ruleId":"165","severity":1,"message":"170","line":15,"column":10,"nodeType":"167","messageId":"168","endLine":15,"endColumn":14},{"ruleId":"165","severity":1,"message":"171","line":20,"column":11,"nodeType":"167","messageId":"168","endLine":20,"endColumn":15},{"ruleId":"165","severity":1,"message":"172","line":23,"column":10,"nodeType":"167","messageId":"168","endLine":23,"endColumn":19},{"ruleId":"165","severity":1,"message":"173","line":23,"column":21,"nodeType":"167","messageId":"168","endLine":23,"endColumn":33},{"ruleId":"174","severity":1,"message":"175","line":40,"column":6,"nodeType":"176","endLine":40,"endColumn":8,"suggestions":"177"},{"ruleId":"165","severity":1,"message":"178","line":45,"column":12,"nodeType":"167","messageId":"168","endLine":45,"endColumn":21},{"ruleId":"165","severity":1,"message":"179","line":50,"column":12,"nodeType":"167","messageId":"168","endLine":50,"endColumn":22},{"ruleId":"165","severity":1,"message":"180","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":19},{"ruleId":"165","severity":1,"message":"181","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":22},{"ruleId":"165","severity":1,"message":"182","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":23},{"ruleId":"165","severity":1,"message":"180","line":3,"column":22,"nodeType":"167","messageId":"168","endLine":3,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"181","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":28},{"ruleId":"165","severity":1,"message":"169","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"183","line":5,"column":16,"nodeType":"167","messageId":"168","endLine":5,"endColumn":28},{"ruleId":"165","severity":1,"message":"184","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"165","severity":1,"message":"185","line":6,"column":25,"nodeType":"167","messageId":"168","endLine":6,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":10,"column":11,"nodeType":"167","messageId":"168","endLine":10,"endColumn":15},{"ruleId":"165","severity":1,"message":"180","line":1,"column":20,"nodeType":"167","messageId":"168","endLine":1,"endColumn":29},{"ruleId":"165","severity":1,"message":"184","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"181","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":22},{"ruleId":"165","severity":1,"message":"180","line":1,"column":20,"nodeType":"167","messageId":"168","endLine":1,"endColumn":29},{"ruleId":"165","severity":1,"message":"170","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"181","line":3,"column":16,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"181","line":3,"column":16,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"169","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"183","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":9,"column":20,"nodeType":"188","messageId":"189","endLine":9,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":74,"column":30,"nodeType":"192","messageId":"193","endLine":74,"endColumn":32},{"ruleId":"194","severity":2,"message":"195","line":1,"column":1,"nodeType":"196","endLine":1,"endColumn":35,"suppressions":"197"},{"ruleId":"165","severity":1,"message":"198","line":4,"column":27,"nodeType":"167","messageId":"168","endLine":4,"endColumn":38},{"ruleId":"165","severity":1,"message":"180","line":4,"column":40,"nodeType":"167","messageId":"168","endLine":4,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"165","severity":1,"message":"181","line":6,"column":16,"nodeType":"167","messageId":"168","endLine":6,"endColumn":28},{"ruleId":"165","severity":1,"message":"199","line":10,"column":9,"nodeType":"167","messageId":"168","endLine":10,"endColumn":17},{"ruleId":"165","severity":1,"message":"200","line":19,"column":10,"nodeType":"167","messageId":"168","endLine":19,"endColumn":17},{"ruleId":"165","severity":1,"message":"201","line":20,"column":10,"nodeType":"167","messageId":"168","endLine":20,"endColumn":15},{"ruleId":"165","severity":1,"message":"202","line":21,"column":10,"nodeType":"167","messageId":"168","endLine":21,"endColumn":21},{"ruleId":"165","severity":1,"message":"170","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"183","line":5,"column":16,"nodeType":"167","messageId":"168","endLine":5,"endColumn":28},{"ruleId":"165","severity":1,"message":"199","line":10,"column":7,"nodeType":"167","messageId":"168","endLine":10,"endColumn":15},{"ruleId":"174","severity":1,"message":"203","line":14,"column":6,"nodeType":"176","endLine":14,"endColumn":12,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"205","line":40,"column":31,"nodeType":"192","messageId":"206","endLine":40,"endColumn":33},{"ruleId":"165","severity":1,"message":"170","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"207","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":27},{"ruleId":"165","severity":1,"message":"208","line":7,"column":3,"nodeType":"167","messageId":"168","endLine":7,"endColumn":15},{"ruleId":"165","severity":1,"message":"209","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":23},{"ruleId":"165","severity":1,"message":"199","line":15,"column":7,"nodeType":"167","messageId":"168","endLine":15,"endColumn":15},{"ruleId":"174","severity":1,"message":"203","line":19,"column":6,"nodeType":"176","endLine":19,"endColumn":20,"suggestions":"210"},{"ruleId":"190","severity":1,"message":"205","line":45,"column":39,"nodeType":"192","messageId":"206","endLine":45,"endColumn":41},{"ruleId":"165","severity":1,"message":"199","line":5,"column":9,"nodeType":"167","messageId":"168","endLine":5,"endColumn":17},"no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","'bars' is defined but never used.","'Link' is defined but never used.","'bars' is assigned a value but never used.","'mapLoaded' is assigned a value but never used.","'setMapLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'logUserIn' is defined but never used.","'logUserOut' is defined but never used.","'useEffect' is defined but never used.","'UserProvider' is defined but never used.","'UserAddressForm' is defined but never used.","'BarsProvider' is defined but never used.","'NavLink' is defined but never used.","'Navigate' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-webpack-loader-syntax","Unexpected '!' in '!mapbox-gl'. Do not use import syntax to configure webpack loaders.","ImportDeclaration",["212"],"'useCallback' is defined but never used.","'navigate' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","'errorsExist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSearchTerm'. Either include it or remove the dependency array. If 'setSearchTerm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'EachBarCocktailPage' is defined but never used.","'barCocktails' is defined but never used.","'BarCocktailsProvider' is defined but never used.",["214"],{"desc":"215","fix":"216"},{"kind":"217","justification":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [setUser]",{"range":"223","text":"224"},"directive","","Update the dependencies array to be: [bars, setSearchTerm]",{"range":"225","text":"226"},"Update the dependencies array to be: [barCocktails, setSearchTerm]",{"range":"227","text":"228"},[1348,1350],"[setUser]",[423,429],"[bars, setSearchTerm]",[559,573],"[barCocktails, setSearchTerm]"]